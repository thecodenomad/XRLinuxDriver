#!/usr/bin/env bash

# This setup script should do the minimum work required to download the release package, unzip it, and kick off the
# setup script contained within.

# exit when any command fails
set -e

DL_URL=https://github.com/thecodenomad/XRLinuxDriver/releases/download/latest

# Make sure only root can run our script
if [ "$(id -u)" != "0" ]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

start_dir=$(pwd)

# create temp directory
tmp_dir=$(mktemp -d -t xreal-air-XXXXXXXXXX)
pushd $tmp_dir > /dev/null
echo "Created temp directory: ${tmp_dir}"

# if the first argument is "-v" then the second argument is metrics version, and the third argument is binary path
# otherwise, if the first argument is present, it's the binary path
if [ "$1" = "-v" ]
then
  metrics_version="$2"
  binary_path_arg="$3"
else
  binary_path_arg="$1"
fi

# systemd requires /etc/os-release to exist, so this should work for a majority of distros
# TODO: add fallback for non-systemd systems
DETECTED_OS=$(sed -n 's/^ID=\(.*\)/\1/p' < /etc/os-release)

if [ -z "$binary_path_arg" ]
then
  # download and unzip the latest driver
  echo "Downloading latest release to: ${tmp_dir}/xrealAirLinuxDriver.tar.gz"
  curl -L -O "${DL_URL}/xrealAirLinuxDriver-${DETECTED_OS}.tar.gz" -o xrealAirLinuxDriver.tar.gz
else
  if [[ "$binary_path_arg" = /* ]]; then
    abs_path="$binary_path_arg"
  else
    # Convert relative path to absolute path
    abs_path=$(realpath "$start_dir/$binary_path_arg")
  fi
  cp $abs_path $tmp_dir
fi

echo "Extracting to: ${tmp_dir}/driver_air_glasses"
tar -xf xrealAirLinuxDriver.tar.gz

pushd driver_air_glasses > /dev/null

# run the setup script that comes with this release, pass in the metrics version
./setup $metrics_version

echo "Deleting temp directory: ${tmp_dir}"
rm -rf $tmp_dir
cd "$(dirs -l -0)" && dirs -c
